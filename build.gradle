plugins {
	id 'org.springframework.boot' version '3.1.1'
	id 'java'
	id "io.freefair.lombok" version "5.3.0"
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

apply plugin: 'io.spring.dependency-management'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

group = 'com.best'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {

	/*jpa*/
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


	/*web*/
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/*lombok*/
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	compileOnly('org.projectlombok:lombok:1.18.26')

	/*dev tools*/
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	/*jdbc*/
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	/*mariadb*/
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.0.6'

	/*test*/
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	/*crawling*/
	implementation 'org.jsoup:jsoup:1.15.3'

	/*log message*/
	implementation('org.slf4j:jcl-over-slf4j')
	implementation('ch.qos.logback:logback-classic')

	/*querydsl dependencies*/

	/***spring rest docs***/
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}

	/*querydsl dependencies*/
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

/**query dsl setting*/
def generated = 'src/main/generated'

sourceSets {
	main.java.srcDir generated
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}




/***spring rest docs***/
ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	dependsOn test
}

bootJar {
	dependsOn asciidoctor

	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/generated-snippets/first")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}
