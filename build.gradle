buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id "io.freefair.lombok" version "5.3.0"
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
	asciidoctorExt
}

group = 'com.best'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {

	/*jpa*/
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	/*thymeleaf layout*/
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	/*web*/
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/*lombok*/
	implementation 'org.projectlombok:lombok:1.18.24'

	/*dev tools*/
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	/*jdbc*/
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	/*mariadb*/
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.0.6'

	/*login logout role show hide*/
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'


	/*starter*/
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	/*test*/
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	/*crawling*/
	implementation 'org.jsoup:jsoup:1.15.3'

	/*log message*/
	implementation('org.slf4j:jcl-over-slf4j')
	implementation('ch.qos.logback:logback-classic')
	
	/*코드 변경 바로 실행 위함*/
	developmentOnly("org.springframework.boot:spring-boot-devtools")

	/*querydsl dependencies*/
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	/***spring rest docs***/
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl" as Object

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

/***spring rest docs***/
ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	dependsOn test
}

bootJar {
	dependsOn asciidoctor

	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/generated-snippets/first")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}
